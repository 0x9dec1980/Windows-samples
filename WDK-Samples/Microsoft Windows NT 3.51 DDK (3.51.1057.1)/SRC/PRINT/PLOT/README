

Overview
--------

The Microsoft Windows NT generic plotter driver is designed to
support both pen and raster plotters.  Devices must at a minimum
support HPGL/2 for vector support and RTL for vector/raster support.

Devices which support both HPGL/2 and RTL must be able to merge both
types of data on the same page.  In order to support a particular
device with this driver you must first define a plotter
charactarization definition or PCD.  A pcd is derived from a simple
text file which contains the capabilities of your device.


Creating a PCD
--------------

A pcd file is generated by converting the text file mentioned above
to a pcd file via a program called "plotgpc.exe".  This text file can
be edited with any text editor.  An ideal way to create a pcd file
for your device is to start with one of the samples contained in this
directory.

The hpgl2pen.txt characterization file is included as a sample for pen
plotter devices.  The hp650c36.txt characterization file is included as
a sample for raster plotter devices.


PCD file format
---------------

- All key word values must be enclosed by braces "{}"

- Strings must be enclosed by double quotation marks.

- A ";" denotes a comment to the end of the current line.

- Keyword types

  FLAG        specified by a 1 or a 0
  WORD        a 16 bit number
  DWORD       a 32 bit number
  STRING      a ANSI string, the maximum length depends on the
              key name.
  FORMSRC     defines a form available on the device
  CONSTANT    Picks from some predefined header value in the form
              of FOO_XX
  COLORINFO   Windows NT DDI, colorinfo structure
              (only valid for RASTER devices)
  PENDATA     Defines the default pen color assignments for PEN
              plotters (only valid for PEN plotters)
  ROPLEVEL    Defines the supported ROP level of the device
              (0 for pen plotters)
	
- Field names and definitions in the form of NAME, TYPE, MAX COUNT

  - DeviceName,STRING,31

  This is the device name and should match the name which appears in
  the INF (installation) file.

  - DeviceSize,DWORD,2

  This is the maximum physical area the device can print to 1/1000 MM
  units.

  - DeviceMargin,DWORD,4

  This is the device margin specified in 1/1000 mm units starting
  with top,left,right,bottom.

  - RasterCap,FLAG,1

  This flag when set specifies the device is capable of handling
  HP-RTL.

  - ColorCap,FLAG,1

  This flag when set specifies the device is capable of COLOR.  This
  flag is defined to differentiate between monochrome and color
  raster devices and should always be set to 1 for pen plotters.

  - BezierCap,FLAG,1

  This flag when set specifies the device can handle Bezier curves.
  If this flag is set the generic plotter driver uses the sequence BR
  or BZ [x1,y1,x2,y2,x3,y3,...[x1,y1,x2,y2,x3,y3]]; BR is used for
  relative coordinates and BZ is used for absolute coordinates.

  - RasterByteAlign,FLAG,1

  This flag when set specifies the device requires byte aligned
  starting positions in RTL.  Do not use this flag unless your device
  absolutely requires it.  This is only used if the device is a
  RASTER plotter.

  - PushPopPal,FLAG,1

  This flag when set specifies the device requires pushing and
  popping the pallete when switching into and out of RTL.  The
  generic plotter driver assumes that modifications to the RTL
  pallete do not affect the HPGL2 pallete and vice versa.

  If your device is not capable of this, then setting this flag will
  cause the generic plotter driver to output a push/pop pallete
  command when switching into and out of RTL..  This is only used if
  the device is a RASTER plotter.

  - TransparentCap,FLAG,1

  This flag when set specifies the device supports the HPGL2
  transparancy (TR) command in order to keep white source pixels from
  affecting the destination.  This is mainly used in doing
  transparent fills like hatch patterns and raster text.  This is
  only u sed if the device is a RASTER plotter.

  - WindingFillCap,FLAG,1

  This flag when set specifies the device supports filling polygons
  with the Nonzero winding fill algoritm.  This fill type is
  specified by appending a 1 to the fill polygon instruction (FP1;).
  By default the device must be able to fill polygons using the
  Odd-Even fill algorithm.

  - RollFeedCap,FLAG,1

  This flag when set specifies the plotter has a roll feeder and is
  capable of continous form printing.

  - PaperTrayCap,FLAG,1

  Currently not used and should be set to 0

  - NoBitmapFont,Flag,1

  This flag when set specifies the device DOES NOT support raster
  fonts.  Devices which require byte aligning MUST set this flag to 1
  as the generic plotter driver does not support both byte aligned
  raster and text sent down as raster.  This is only used if the
  device is a RASTER plotter.

  - RTLMonoEncode5,FLAG,1

  This flag when set specifies the device supports HP-RTL compression
  mode 5 (Adaptive Encoding).  At a minimum a RASTER plotter MUST
  support HP-RTL compression modes 0-4.  This is only used if the
  device is a RASTER plotter.

  - RTLNoDPIxy,FLAG,1

  This flag when set specifies the device DOES NOT support true pixel
  level positioning using the RTL commands "Esc*p#x and Esc*p#Y"
  Instead the generic plotter uses the RTL commands "Esc&a#h and
  Esc*b#Y" and always positions to a byte aligned x pixel po sition.
  This is only used if the device is a RASTER plotter.

  - RTLMonoNoCID,FLAG,1

  This flag when set specifies the device DOES NOT support the HP-RTL
  configure image data command.  This is only used if the device is a
  RASTER plotter.

  - RTLMonoFixPal,FLAG,1

  This flag when set specifies the device DOES NOT support
  reprograming of its RTL pallete.  Color raster devices must support
  reprogramming of the RTL pallete if they want text to be sent down
  as RASTER.  This is only used if the device is a RASTER pl otter.

  - PlotDPI,DWORD,2

  Specifies the X and Y resolution of the plotter in its native
  units.  This should always be set to 1016.

  - RasterDPI,WORD,2

  Specifies the RTL coordinate system (x,y) for the plotter and is
  also the DPI reported back to the Graphics Engine.  For raster
  devices this should always be the TRUE RTL resolution.

  - ROPLevel,DWORD,1

  This is one of the predefined values of 0,1,2 or 3.  This only
  affects raster plotters, pen plotters should set this to 0.

    0 = No rop support, all non-raster plotters should have this
        set to 0.
    1 = Supports SRC only
    2 = Supports SRC/DST
    3 = Supports SRC/DST/PAT

  - MaxScale,WORD,1

  This value defines the maximum scale this device allows the user to
  specify in the AdvancedDocumentProperties dialog and also in the
  dmScale field of the passed DEVMODE.

     0 = No scale allowed
    !0 = Maximum value allowed in percent (ie 500 = 500%)

  - MaxPens,WORD,1

  This specifies the maximum number of pens in the plotter.  For
  raster plotters this number defines the number of pens in the
  carousel (typically 8).  For raster plotters this number defines
  the maximum number of pens that can be specified with the NP
  command (typically 256).

  - MaxCopies,WORD,1

  This number specifies the maximum number of copies the user is
  allowed to enter via the dmCopies field in the DEVMODE structure.
  This value should be greater than one if the device is capable of
  buffering an entire page and replotting via the RP comm and.  If
  the device is not capable of reploting the value should be set to 1.

  - MaxPolygonPts,WORD,1

  This number specifies the maximum number of polygon points (an x
  and y coordinate) the device can store in its polygon buffer.  The
  generic plotter driver uses this information to fill complex paths
  as efficiently as possible.

  - MaxQuality,WORD,1

  This number specifies the number of different quality levels the
  device supports.  It is typically 3 or 4.  This number is used to
  generate the HPGL/2 QL command.

  - PaperTraySize,DWORD,2

  Currently not used.

  - COLORINFO,DWORD,30

  This structure contains information the halftoning engine uses when
  halftone bitmaps sent to the plotter.  This is only used if the
  device is a RASTER plotter.

  - DevicePelsDPI, DWORD,1

  This value specifies the number of pixels per inch of the device if
  the pixels were placed next to each other.  A value of 0 specifies
  a resonable default chosen by the halftoning logic.  This is only
  used if the device is a RASTER device.

  - HTPatternSize,CONSTANT,1

  This value must match one of the HT_PATSIZE_xx values defined in
  winddi.h.  This is the default halftone cell size to use when
  halftoning to this device.  This is only used if the device is a
  RASTER device.

  - InitString,STRING,255

  This string is sent out at the beggining of each page and should
  put the device into a known default state for both RTL and HPGL/2.
  If the device supports the PP1 command it should be defined here.

  Immediately following this command the generic plotter driver will
  send out the quality (QL) command followed by the PS command to
  define the page size.  If the device supports an autorotate feature
  for paper conservation, that feature should be disabled by this
  command string, as the generic plotter driver allows paper
  rotation.

  - PlotPenData,PENDATA,<=32

  These entries set up the default carousel for pen plotters.  A
  maximum of 32 pens can be defined per device and you must define a
  PENDATA structure for the same number of pens as specified in the
  MaxPens keyword.  The PENDATA keyword has the following structure:

  PENDATA - 1. One word which defines the pen (one based) to assign
               the color to.
            2. constant which defines a predefined pen color PC_IDX_xxxx.

  Valid colors with the corresponding RGB values are:

      Index            R   G   B
    ------------------------------
    PC_IDX_WHITE     255 255 255
    PC_IDX_BLACK       0   0   0
    PC_IDX_RED       255   0   0
    PC_IDX_GREEN       0 255   0
    PC_IDX_YELLOW    255 255   0
    PC_IDX_BLUE        0   0 255
    PC_IDX_MAGENTA   255   0 255
    PC_IDX_CYAN        0 255 255
    PC_IDX_ORANGE    255 128   0
    PC_IDX_BROWN     255 192   0
    PC_IDX_VIOLET    128   0 255


  - FormInfo,FORMSRC, <= 64

  Supplies information about the valid forms for this device.  The
  first form specified is the default form the device is setup with
  when the user installs this device.  Default system forms are
  automatically included if they are within the constraints o f the
  maximum physical size the device can print to.  For ROLL papers
  specify only the width and leave the height to 0.  All values are
  in 1/1000 mm.  A maximum of 64 forms can be defined per device.

  The structures are in the form:

    <name>,<cx>,<cy>,<Left,Top,Right, Bottom>

    name   = name of the form
    cx     = width of the form
    cy     = height of the form
    left   = Left margin
    top    = Top margin
    right  = Right margin
    bottom = Bottom margin

  A few examples:

    FormInfo { "Roll Paper 24 in",       609600,       0, 0, 0, 0, 0 }
    FormInfo { "Roll Paper 36 in",       914400,       0, 0, 0, 0, 0 }
    FormInfo { "ANSI A 8.5 x 11 in",     215900,  279400, 0, 0, 0, 0 }
    FormInfo { "ANSI B 11 x 17 in",      279400,  431800, 0, 0, 0, 0 }
    FormInfo { "ANSI C 17 x 22 in",      431800,  558800, 0, 0, 0, 0 }
    FormInfo { "ANSI D 22 x 34 in",      558800,  863600, 0, 0, 0, 0 }


Building a PCD
--------------

Start with the sample text file that resembles your device.
(hpgl2pen for pen devices or hp650c36 for raster devices)

Make a copy of the file and edit the copy, making any modifications
required to characterize your device.  Run the file through the
plotgpc program as follows:

	plotgpc yourfile.txt yourfile.pcd

This will produce a .pcd file which can be loaded and read by the
plotter driver.  The driver should be installed via an INF file,
sample INF files are supplied in the \ddk\src\setup directory and are
documented in the DDK Programmer's Guide.


Notes:
------

Monochrome raster is still treated like color as far as the Windows
NT graphics engine is concerned.  The only difference is the target
surface is 1 bit/pel instead of 4 bits/pel.  All colors are mapped to
a grayscale then sent to the device.

All of device handling is in HPGL/2 the driver switches into RTL only
for bitmaps. (including raster text)
