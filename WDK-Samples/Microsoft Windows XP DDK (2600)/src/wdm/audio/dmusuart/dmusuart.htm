<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-
1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>DMUSUART</TITLE>
</HEAD>
<BODY LINK="#0000ff">

<FONT FACE="Verdana" SIZE=5><H2>DMUSUART</H2>
</FONT><FONT FACE="Verdana" SIZE=2>
<P><span style="color:#FF0000;font-size:10pt;font-family:Arial">[This is preliminary 
documentation and subject to change.]</span></P>

<H3>SUMMARY</H3></FONT><FONT FACE="Verdana" SIZE=2><P>
This sample is a DMusic UART miniport driver, which provides an interface to the MPU-401 chip. <P>
The DMusic (DMUS) port driver, which is built into PortCls.sys, insulates this miniport and connects it to the rest of the system. The sample handles
one input stream visible to either DirectMusic or midiIn APIs, one output stream visible to midiOut APIs, and multiple output streams visible to DirectMusic APIs.  It compiles in the 64-bit environment and is compatible with both Alpha and x86 platforms.<P>
Plug and Play and Power Management are handled automatically on the miniport's behalf by PortCls.<P>

<H3>BUILDING THE SAMPLE</H3></FONT><FONT FACE="Verdana" 
SIZE=2><P>

Type <B>build</B> in the \\Ntddk\Src\Wdm\Audio\Miniport\dmusuart directory.  A 
successful build produces dmusuart.lib, which can be linked into an adapter driver.<P>


<H3>RESOURCES</H3></FONT><FONT FACE="Verdana" SIZE=2><P>
This exact miniport is already included in PortCls. We have provided the source code as a starting point for those that need to write simple DMusic drivers (for more complex DMusic devices, including those that have DLS functionality, please instead reference the DMusic kernel-mode software synth sample).
This miniport interfaces to the port driver of type DMUS. There is also an older port, type MIDI, that is present in PortCls.  Unlike the DMUS port, the MIDI port is available in Windows 98.  The DMUS port provides higher functionality than the MIDI port, so if you are creating your own miniport, consider interfacing to DMUS instead of MIDI. The advantage of DMUS miniport drivers is that they are visible to DirectMusic APIs, unlike MIDI miniport drivers. Additionally, DMUS miniports can be visible to the older MIDI APIs if the legacy pin descriptor is included. In short, DirectMusic miniports have the benefits of both backward compatibility and advanced functionality. 
<p>
Please refer to the SB16 sample to learn how to include and use the built-in miniport.<p>


DirectMusic kernel support is available in Windows 98SE, Windows 2000 and later.




<H3>CODE TOUR</H3>
<H4>File Manifest</H4>
</FONT><U><PRE>File&#9;&#9;Description
</U>
miniport.cpp&#9;Miniport driver implementation
mpu.cpp&#9; 	MPU device-specific implementation
private.h&#9;Interface for the CPP files
sources&#9;	Sources for build
</FONT><P ALIGN="CENTER"><A HREF="#top"><FONT FACE="Verdana" SIZE=2>Top of page</FONT></A><FONT FACE="Verdana" SIZE=2> </P></FONT>
<TABLE CELLSPACING=0 BORDER=0 WIDTH=624>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#00ffff" HEIGHT=2>
<P></TD>
</TR>
</TABLE>

<FONT FACE="MS Sans Serif" SIZE=1><P>&copy; 1999-2000 Microsoft Corporation</FONT><FONT FACE="Verdana" SIZE=2> </P></FONT></BODY>
</HTML>

