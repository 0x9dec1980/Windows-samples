<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-
1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>FMSynth</TITLE>
</HEAD>
<BODY LINK="#0000ff">

<FONT FACE="Verdana" SIZE=5><H2>FMSynth</H2>
</FONT><FONT FACE="Verdana" SIZE=2>
<P><span style="color:#FF0000;font-size:10pt;font-family:Arial">[This is preliminary 
documentation and subject to change.]</span></P>

<H3>SUMMARY</H3></FONT><FONT FACE="Verdana" SIZE=2><P>
This sample is a MIDI FM miniport driver.  This sample provides an interface to a device that implements
OPL3-style FM synthesis.  The MIDI port driver serves as a wrapper for this miniport
driver.  Because the sample is a synthesizer, it is
for output only.  It compiles in the 64-bit environment and is compatible with Alpha and x86 platforms.<P>
Because the sample  is a PortCls client,  PortCls handles Plug and Play.  Power Management is also supported.  <P>
There are two GUIDs with which an adapter can instantiate this miniport.  The first is the normal mode, used by a vast majority of clients. However, if the audio device does not provide an analog volume control after the FM synth (such as the WSS
device), then the second GUID, which implements an FM synth with a built-in volume control, can be used.<P>


<H3>BUILDING THE SAMPLE</H3></FONT><FONT FACE="Verdana" 
SIZE=2><P>

Type <B>build</B> in the \\Ntddk\Src\Wdm\Audio\Miniport\Fmsynth directory.  A 
successful build produces Fmsynth.lib, which is a .lib file used in building the
audio adapter samples.<P>

<H3>RESOURCES</H3></FONT><FONT FACE="Verdana" SIZE=2><P>
 This exact miniport is already included in PortCls. We have provided the source code as a starting point for those that need to augment it, as well as those that need to create completely new miniports. 
This miniport interfaces to the port driver of type MIDI. A new port, type DMUS, was introduced in Microsoft® Windows 98® Second Edition (SE) and Microsoft Windows 2000.  The DMUS port provides higher functionality than the MIDI port, so if you are creating your own miniport, consider interfacing to DMUS instead of MIDI. The advantage of DMUS miniport drivers is that they are visible to DirectMusic APIs, unlike MIDI miniport drivers. Additionally, DMUS miniports are still visible to the older MIDI APIs. In short, DirectMusic miniports have the benefits of both backward compatibility and advanced functionality. 
 
<p>
Please refer to the SB16 sample to learn how to use the built-in miniport.<p>
DirectMusic kernel support is not available in Windows 98, only in Windows 98SE and Windows 2000 and later.

<H3>CODE TOUR</H3>
<H4>File Manifest</H4>
</FONT><U><PRE>File&#9;&#9;Description
</U>
Miniport.cpp&#9;Miniport driver implementation for FMSynth
Sources&#9;	Sources for build
<P>
</FONT><P ALIGN="CENTER"><A HREF="#top"><FONT FACE="Verdana" SIZE=2>Top of page</FONT></A><FONT FACE="Verdana" SIZE=2> </P></FONT>
<TABLE CELLSPACING=0 BORDER=0 WIDTH=624>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#00ffff" HEIGHT=2>
<P></TD>
</TR>
</TABLE>

<FONT FACE="MS Sans Serif" SIZE=1><P>&copy; 1999-2000 Microsoft Corporation</FONT><FONT FACE="Verdana" SIZE=2> </P></FONT></BODY>
</HTML>

